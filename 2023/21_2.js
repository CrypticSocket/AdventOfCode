/*
Learnings: 
This was an easy DFS question. Although, BFS might have been the "right" way to do this?
I felt like it would be much easier to cache this.
I was right but this might not help in the next question because I need to make changes anyway.
*/

let dummyInput = `...........
.....###.#.
.###.##..#.
..#.#...#..
....#.#....
.##..S####.
.##..#...#.
.......##..
.##.#.####.
.##..##.##.
...........`

let dummyInput2 = ``

let actualInput = `...................................................................................................................................
...........##......#..........#.#....#....................#....................#...#....#...........#................##...#......#.
....................#..........#.#.....###.............................#.......#.....#...........##.##.....#..............#..#.....
.#........#......................#...#.#..#..........#..........................###......#.#.#.#................#.............##...
.....#...........#..........#.#.#....................#.......................#.#..##.......##........#....##....#.......#..#.......
....#.#......#.....#............#............#..#...#..#...................#......#......#.............#.......#..#.....#....#.....
..#...#............#....#......#......#......#..#....#.#..........#..............#..................#..#......#...........##.#..#..
.............##...............#............#..................#....#..........#........#...............................#...#.#.....
......#......#....#....##......#.....#.........#...................................#....#................#....#......#.......##....
.....#.....#...................#....................#.......#..#....#..................#..........................#.#.......#......
...#.#..#..#................#..............#.........................##.................#..........#............#.##...........#.#.
....#........###.#..##.......#.......#..##..#...................................#.....#...##.........#..................#.......#..
..............#.............#...........#...........................#....#..........#..#...#.............#....#...........#........
.#.#.......#..#.....#..#............#...........#.........#.....#....#.........................#.............#.#...#..........#....
.......#.....#..#..#...............#...#...................##.#..........................................##.#......................
.............#........##.....#.............................#.........#..#.......................#.....#.........................#..
........#..............#......#......................#..........#..............................#...........#...........#...........
.....#.....#........#..................#....#.............#....#.........#..........................##.............................
....................#.#.....#...#........#..............#.......#.......#..#.........................#.............#.........#.....
...##.#....#.......#..........#.#........##..........#............#...#....#...#.............#...............#.............#.......
...#........#.#...................##.............#.#.......#...........#..#..................................#................#....
.........#............................................##..........#...#..#.......#..............#.....#..##...##....#..#...........
.#.....#.............#........#.......#...........#........#.#....##............................................#..............#...
.......#....##...#.....###.#....#..#............#...#.........................#.................#..#.#...........#.................
.................##....#.........#............##..#..........#.........#.....##.##............#...#.......#.......#......#.#.......
..##..............#..#..#...#.......#.......#...#..........#..........#.......##....#..........##............#.#....#....#..#......
........#...................#.#..###..............#...#.#.#.#.....#.....##..#...###..............#.......#..........#.....#........
..........##.............#......#.#....................#.#...................#..........#.............#.#....................#..##.
.#............................#..........#.#...#.........##..#...........#.#.....#...............#.........#.....#..#..............
....................#....#...##..........................#...#....#.#.......#.#...........................#...................#..#.
..........##......###....###.#............#.................................#..#...........#.......#..#.........................#..
..#.........#......###..................................#..........................##.#.#..................#.........#.##..#.#.....
.....#...................#...#...........#..#......#...................#...#...........#...#.........#...............#.............
........#.#.#.....................................#.#.........##......#.##.....#.#...#...................#.....................#...
..###..#......#.#.#.#................#.......#.#.....................#.#..#.#...............#....................#........#.##..#..
.#........#......#.##.....#...........#.............#....#...........#................................................#............
....#.........#..#................................#...............................#............................#...................
....#...#....#..#......#.........#..........#.......#.......#..........#.........#.......#.....#.............#......#...#..........
.....#..#......................................................#...#.........#................##...........#...........#..###......
...##....#...........#..........#.........#..........#..........#....##.............#....................................#......#..
....#........#.................#...........#..........#...##...................#....##...#.....#..#..............#..#..#....#......
...#.#............#.#.......................................#..#..#..................................#...............#.#.#.........
....#............#...........#...#..........#..#......................#.#...#.....#....................#.......##..........#.......
................#...................#....#....................##.........................#........................#......#.........
..............#...............#..#.......#..#......#....#...#.................#..#....#........#..#.....#.....................#....
.......#........................#.#....#....#..#................#....#.........#..............#........#...........#...............
...#.......#................#.....#........#....##.................#...#...............##.......#...#....................#.........
........#.........................#..#...##..........................##......##....#.....#.#....#..##............................#.
..#...##................##........#.........#..#.........##................................#.............#.#.................#.....
....#.............................#.............#...............#...........#...............#....#.....#....#.#....................
..........##.............#......#..................#.........#......#....#.......#....#......#....#................................
.....#.#.#........................#..#.........#.....................#..##...#.......#......#..#.....#...#..#...#..........#.......
...................#.#..........#...............#...#.#......#....#.................#.................###.....................#....
.....................................#.......#....#................#..........................#..........#.................##...#..
....#................#..#......#....#..................#..........................................#....#....#......#.......#.......
......#..........#........#...#...#..#................#.........#.........#...#.........#.#....................#..#................
.....#................#...#.#.#....#.#............##....#...........#......##..##............#......##.......#...#...............#.
...#..........#..........................#.................................#................#..........###...##.......#............
...........................#..........#......#.....#...#.#....#.....##.........##.....#.......................##..#..#..........#..
....................#......##...#.............#.....#.#....#...........#...##..#..#............#...#...............#...............
...............#.##.....#..........#..............#......#........#...........#..#.#......................#...#..#..##.............
...................#....##...#..#..............#....................###.....#............#.........##..#.....#.##..#...............
............................#......#.##.....#....#..#...#..###............#.............#.....................##...........#.......
............#.....#.#.#.........#...#........................#......#...................#...##..#.................#........#.......
................................#.........................................#...#.......#....#.........#.........#.....#...#.........
.................................................................S.................................................................
................#.......#.............................#.#......#................#..#..#......#..........#.............#............
.............##........#.......#.#............#.......#.#.......#...#.....#...........#....#..#................#...........#.......
............................#.#....##............#.##..###..............................#....#............#..#........#............
..................#........#.........##.....#....#...##.#......................###.....#..#........#.#.......##.......#............
...................#...##..........#.#..#................##....................###...................#.....#........#.#..........#.
.................##........................#....#.#..#.....##................#...........................#......#................#.
............................#........#........#..##.....#..#.......#......#.#...#...................................#...........##.
..............#..........#............#...#...............#.........#.#...#...##..##.....#...........#...#..........#.#............
.#.............#...#.........#.....###.#...............................#.....#.....#............#..#.........#.#.#.................
....#...............#..#.....#.....#.......##....#.#........#.##.............##..#.............#.#.#...........................#...
........................#.....#..#....#......#......#..#....#...#..#..........#....#...............#.........##..#.................
....#................#.....#.#............#..................#..#................#.........#.....#.............#...................
.................#.......#.....##.##.....#..................#..#......#....#...............#............#.#.#....#.........#....#..
.......#................#..#.........#......###.....#.#........#....##......#.......#..#.#.......#.#....#.#...............#........
...#.....#.#...............#....#..............#.........#...........#............#............#..#.#..##..........................
......#...............##.............#.#...............#....................#..#..##.#.#.................#......................#..
..#.....##..#.............#...#.......#.......................#........#.#.#............#...................#...................#..
........................#..#..................#..#.#.#..............................#...#...#......#....#.#........................
...#....................#................................#...#.....#...........#........#..#........#...................##.#.....#.
......#...##...#.................#..#..#....#.....#.....#.....#...#..................#.............................#..#......#.....
....................................#..................#....#...#.........#....#......................#.............#....###..#....
.##..#..#...##..........................#..#..#...........#..............#....#.........#....#....................#......##........
.##............#.#...............##....#.....#.......#..........#......#...............#..#...#........#.................#..#......
.#..#.##.........##.#..........#...........#...#...#.....#.#..#............##.........##...#.....................#...#........#....
.......#....#.#.....#........#..................#.............##........#..........##.........#..............#.#..#...#.....#.#..#.
...#..#....#........#.......................#.......#........#....#.........#..............#...#..#.#.......##...........#.#.#..#..
................#......#......................#...#...............#.#.....#......#..........#.##.#.........#....#...#......#..#....
..............##.#..#...............#.#...........#..#......#......#..#.#..#.................#.....................#.........#.#...
..#................#..#..#..........#........#.#.........#....#...........#...#.......#.#.......#......................#..#......#.
......#............#...##..........#...#..................#.....#............##............................#...#..#........#....#..
..................#..................................###.#..........#....##......#....#.................#..........#..#............
...#..#.......#......#........................#...#......#..................#.#.#.#.#.....#...................#..#...#......##...#.
....................#.#......#.......#......#....#.......#.#.......#.............#...#..#.........................#................
.........#................#.#...........##......#..#..#..................#....#......#......#.......#.#......#.........#.....#.....
..#..........#...........#.........................#.......#..........#....#...........#.#..............................#.....##...
.....#.#..#......#....#....#.............................##.....#...#......#..#..#...#..............#..........#.................#.
.............##....##.......................#.#............#................#....#.......#...................#.....................
..#.......#.........#......................................................#..#..#..............#..#.##............................
......#.......#....#............................................#.#...................##...............##......#.......#.........#.
..............#..#..............#...........#...............................#...................................#....#......#.#....
.........#....#......#.....#.................#..............#.................................................#........##..........
......#...##..............#....#.#............#..#....#...........#.........#..........................#......#.#..........##.#....
...#....#.....#........##...#...................#.#....#...........................#...........................#..........#........
.#..........#.#.....#............#.#................#...#.#..#...............#....#..........#.........#............#.......#.#....
.........#......#.#.#.......#....#...#.#......................#........#..#...#...................#.......#.........#............#.
..........................#.....#.................................#.#.....#.................................#.#...#.###....#.......
...#.................#..#.................#..............#........#.......#.#.............#................#...#..#...........#....
....#..#....................#...............................#.#....#...........................#..#.....##..#................##..#.
....#...#...#..##........##......#...#......#................#..#.......................#....#........#...#.......#..........#.....
............#.....#................#.........#.............#...#...#.#................#...........#......#..#.......#........#.#...
......#...#...........#....#..#.#..............................#......................................................#............
................#.....#.....#....#.......#..#...#..........#.#......................#..#...#.....#...........#.............#..#....
..............#.....#.......#.#.............#.................#.........##.............#......#..............#.....................
...#......#.##...............#..........#...#....#............##................#........#.#......#.#.#............................
.#....#......................#...............###.....................#..................#..#..........#...........#.....#..........
............#..#.......#....#...........#...##..#...........##....#.............#..#.#....#............#..#.......#.#.#.....#......
......#.....##.##.#.....#.#...........#.#.#...................#..................#..#..#..#........#........................#.#....
....#.........#........................#..#....##.................#............#.......#..........................##.#.....#.......
..#..#....................#..........#..........#...........................#..............#....................#..................
..............#...#...............#...........##................#..........#........#.#....#......##.......#....#.......#...##.....
......#...............#........#...#...........#.....#......................#............#.............#..........#...........##...
..#..........#.#.#........#.#..#.#..##...........#.........................#........#.#....#.#........#.........#........#......##.
..........#.#.#...#...#.#...............................#..............#....#......##..........#.#..........#...#....#.............
.....................#............#......#.#..#....#..#..#..............#....#.#........................##......#............#.....
...................................................................................................................................`

let defaultGardenWidth, defaultGardenHeight

let visitedGarden = null, cache = null, cache2 = {}

var FormatInput = function(input)
{
    return input.split('\n').map(x => x.split(''))
}

var GetCoordinateText = function(i, j)
{
    return i + ',' + j
}

var isPossibleMovement = function(i, j, data)
{
    return data[i] != undefined && data[i][j] != undefined && data[i][j] != '#'
}

var FindStartingPosition = function(data)
{
    defaultGardenHeight = data.length
    defaultGardenWidth = data[0].length
    
    for (let i = 0; i < data.length; i++) {
        for (let j = 0; j < data.length; j++) {
            
            let coordinate = GetCoordinateText(i, j)
            if(data[i][j] == 'S') 
            {
                startingPosition = coordinate
                return
            }
        }
    }
}

var FindNeighbours = function(expandedI, expandedJ, data)
{
    if(expandedI > 10 || expandedI < 0)
    {
        let a
    }
    let i = expandedI >= 0 ? expandedI % defaultGardenHeight : (defaultGardenHeight + expandedI) % defaultGardenHeight
    let j = expandedJ >= 0 ? expandedJ % defaultGardenWidth : (defaultGardenWidth + expandedJ) % defaultGardenWidth
    let neighbours = []
    
    let up = i - 1 >= 0 ? i - 1 : defaultGardenHeight + (i - 1)
    let left = j - 1 >= 0 ? j - 1 : defaultGardenWidth + (j - 1)
    let down = i + 1 < defaultGardenHeight ? i + 1 : i % defaultGardenHeight
    let right = j + 1 < defaultGardenWidth ? j + 1 : j % defaultGardenWidth

    if(isPossibleMovement(down, j, data)) neighbours.push(GetCoordinateText(expandedI+1, expandedJ))
    if(isPossibleMovement(up, j, data)) neighbours.push(GetCoordinateText(expandedI-1, expandedJ))
    if(isPossibleMovement(i, right, data)) neighbours.push(GetCoordinateText(expandedI, expandedJ+1))
    if(isPossibleMovement(i, left, data)) neighbours.push(GetCoordinateText(expandedI, expandedJ-1))

    return neighbours
}

var FindNeighbours2 = function(i, j, data)
{
    let neighbours = []
    
    let up = i - 1 
    let left = j - 1 
    let down = i + 1 
    let right = j + 1 

    if(isPossibleMovement(down, j, data)) neighbours.push(GetCoordinateText(i+1, j))
    if(isPossibleMovement(up, j, data)) neighbours.push(GetCoordinateText(i-1, j))
    if(isPossibleMovement(i, right, data)) neighbours.push(GetCoordinateText(i, j+1))
    if(isPossibleMovement(i, left, data)) neighbours.push(GetCoordinateText(i, j-1))

    return neighbours
}

var GetUnexpandedValue = function(position)
{
    let [i, j] = position.split(',').map(Number)
    i = i % defaultGardenHeight
    j = j % defaultGardenWidth

    return GetCoordinateText(i, j)
}

// Uses list of reached
// var StartTravel = function(startingPosition, remainingSteps, data)
// {
//     // let possibleMovements = [...adjacencyList[startingPosition]]
//     let [i, j] = startingPosition.split(',').map(Number)
//     if(startingPosition.startsWith("-10"))
//     {
//         let a
//     }
//     let possibleMovements = FindNeighbours(i, j, data)
//     let gardensReached = []     // Will help to visualize later


//     if(remainingSteps == 0)
//     {
//         if(!visitedGarden.has(startingPosition))
//         {
//             gardensReached.push(startingPosition)
//             visitedGarden.add(startingPosition)
//         }
//         return [...new Set(gardensReached)] 
//     }

//     while(possibleMovements.length > 0)
//     {
//         let nextPosition = possibleMovements.shift()
        
//         let key = GetUnexpandedValue(nextPosition) + '-' + remainingSteps
//         if(cache[key] != undefined)
//         {
//             continue
//         }
//         else
//         {
//             let newGardensReached = StartTravel(nextPosition, remainingSteps - 1, data)
//             gardensReached.push(...newGardensReached)
//             cache[key] = newGardensReached
//         }
//     }
//     return [...new Set(gardensReached)]
// }

// var StartTravel = function(startingPosition, remainingSteps, data)
// {
//     // let possibleMovements = [...adjacencyList[startingPosition]]
//     let [i, j] = startingPosition.split(',').map(Number)
//     if(startingPosition.startsWith("-10"))
//     {
//         let a
//     }
//     let possibleMovements = FindNeighbours(i, j, data)
//     let gardensReached = 0    // Will help to visualize later


//     if(remainingSteps == 0)
//     {
//         if(!visitedGarden.has(startingPosition))
//         {
//             gardensReached++
//             visitedGarden.add(startingPosition)
//         }
//         return gardensReached 
//     }

//     while(possibleMovements.length > 0)
//     {
//         let nextPosition = possibleMovements.shift()
        
//         let key = GetUnexpandedValue(nextPosition) + '-' + remainingSteps
//         let newKey = nextPosition + '-' + remainingSteps
//         if(cache[key] != undefined && cache[newKey] == undefined)
//         {
//             gardensReached += cache[key]
//             cache[newKey] = cache[key]
//         }
//         else
//         {
//             let newGardensReached = StartTravel(nextPosition, remainingSteps - 1, data)
//             gardensReached += newGardensReached
//             cache[key] = newGardensReached
//         }
//     }
//     return gardensReached
// }

var StartTravel = function(startingPosition, remainingSteps, data)
{
    // let possibleMovements = [...adjacencyList[startingPosition]]
    let [i, j] = startingPosition.split(',').map(Number)
    let possibleMovements = FindNeighbours2(i, j, data)
    let gardensReached = 0

    let _key = startingPosition + '-' + remainingSteps
    if(cache2[_key] != undefined)
    {
        return gardensReached
    }

    if(remainingSteps == 0)
    {
        if(!visitedGarden.has(startingPosition))  // We need to see if there are still spots that we might have not visited in the original garden
        {
            gardensReached++
            visitedGarden.add(startingPosition)
        }
        return gardensReached 
    }


    while(possibleMovements.length > 0)
    {
        let nextPosition = possibleMovements.shift()
        
        let key = nextPosition + '-' + remainingSteps
        if(cache[key] != undefined)
        {
            gardensReached += cache[key]
        }
        else
        {
            let newGardensReached = StartTravel(nextPosition, remainingSteps - 1, data)
            gardensReached += newGardensReached
            cache[key] = newGardensReached
        }
    }
    cache2[_key] = gardensReached
    return gardensReached
}

var GetResult = function(input, steps)
{
    visitedGarden = new Set(), cache = {}
    let data = FormatInput(input)
    FindStartingPosition(data)
    let result = StartTravel(startingPosition, steps, data)
    return result
}

// console.log('Dummy Output 1 :\t' + GetResult(dummyInput, 6) + '\nExpected :\t\t16\n')
// console.log('Dummy Output 2 :\t' + GetResult(dummyInput, 10) + '\nExpected :\t\t50\n')
// console.log('Dummy Output 3 :\t' + GetResult(dummyInput, 50) + '\nExpected :\t\t1594\n')
// console.log('Dummy Output 4 :\t' + GetResult(dummyInput, 100) + '\nExpected :\t\t6536\n')

// console.log('Dummy Output 2 :\t' + GetResult(dummyInput2) + '\nExpected :\t\t11687500')
console.log('Actual Output : ' + GetResult(actualInput, 640))